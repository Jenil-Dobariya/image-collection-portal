version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: image-portal-db
    environment:
      POSTGRES_DB: image_collection_db
      POSTGRES_USER: portal_user
      POSTGRES_PASSWORD: portal_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5433:5432"  # Changed external port to avoid conflict
    networks:
      - portal-network
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: image-portal-backend
    environment:
      - NODE_ENV=production
      - DB_USER=portal_user
      - DB_HOST=postgres
      - DB_DATABASE=image_collection_db
      - DB_PASSWORD=portal_password
      - DB_PORT=5432  # Internal port remains same
      - EMAIL_HOST=${EMAIL_HOST:-smtp.gmail.com}
      - EMAIL_PORT=${EMAIL_PORT:-587}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
      - PORT=3001
    volumes:
      - upload_data:/app/data
    ports:
      - "3001:3001"
    depends_on:
      - postgres
    networks:
      - portal-network
    restart: unless-stopped

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: image-portal-frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3001/api
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - portal-network
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: image-portal-nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - upload_data:/var/www/uploads:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - backend
    networks:
      - portal-network
    restart: unless-stopped

volumes:
  postgres_data:
  upload_data:

networks:
  portal-network:
    driver: bridge 